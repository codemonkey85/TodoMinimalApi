@page "/weather"
@inject IHttpClientFactory ClientFactory

<PageTitle>@App.SetPageTitle("Weather Forecast")</PageTitle>

<MudText Typo="Typo.h3">Weather Forecast</MudText>

<MudText Typo="Typo.body1">This component demonstrates fetching data from the server.</MudText>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <MudSimpleTable>
        <thead>
            <tr>
                <th>Date</th>
                <th aria-label="Temperature in Celsius">Temp. (C)</th>
                <th aria-label="Temperature in Farenheit">Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </MudSimpleTable>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        using var client = ClientFactory.CreateClient("Todo.Api");
        forecasts = await client.GetFromJsonAsync<WeatherForecast[]>("/api/weatherforecast");
    }
}
